# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Chat API
    version: 0.0.1
paths:
    /chat/account/code/send:
        post:
            tags:
                - Chat
            operationId: Chat_SendVerifyCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendVerifyCodeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendVerifyCodeResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/code/verify:
        post:
            tags:
                - Chat
            operationId: Chat_VerifyCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyCodeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyCodeResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/imgcode/send:
        post:
            tags:
                - Chat
            operationId: Chat_SendVerifyImgCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendVerifyImgCodeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendVerifyImgCodeResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/imgcode/verify:
        post:
            tags:
                - Chat
            operationId: Chat_VerifyImgCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyImgCodeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyImgCodeResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/login:
        post:
            tags:
                - Chat
            operationId: Chat_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/password/reset:
        post:
            tags:
                - Chat
            operationId: Chat_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetPasswordReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetPasswordResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/account/register:
        post:
            tags:
                - Chat
            operationId: Chat_RegisterUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterUserResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/user/find/full:
        post:
            tags:
                - Chat
            operationId: Chat_FindUserFullInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FindUserFullInfoReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FindUserFullInfoResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/user/search/full:
        post:
            tags:
                - Chat
            description: Search user information - called by administrators, other users get public fields
            operationId: Chat_SearchUserFullInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchUserFullInfoReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchUserFullInfoResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /chat/user/update:
        post:
            tags:
                - Chat
            description: Edit personal information - called by the user or an administrator
            operationId: Chat_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserInfoReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserInfoResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        FindUserFullInfoReq:
            type: object
            properties:
                userIDs:
                    type: array
                    items:
                        type: string
        FindUserFullInfoResp:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserFullInfo'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LoginReq:
            type: object
            properties:
                account:
                    type: string
                    description: |-
                        string areaCode = 1;
                          string phoneNumber = 2;
                          string verifyCode = 3;
                password:
                    type: string
                platform:
                    type: integer
                    format: int32
                deviceID:
                    type: string
                ip:
                    type: string
        LoginResp:
            type: object
            properties:
                chatToken:
                    type: string
                userID:
                    type: string
        RegisterUserInfo:
            type: object
            properties:
                userID:
                    type: string
                nickname:
                    type: string
                faceURL:
                    type: string
                birth:
                    type: string
                gender:
                    type: integer
                    format: int32
                account:
                    type: string
                    description: |-
                        string areaCode = 6;
                          string phoneNumber = 7;
                          string email = 8;
                password:
                    type: string
                RegisterType:
                    type: integer
                    format: int32
        RegisterUserReq:
            type: object
            properties:
                invitationCode:
                    type: string
                verifyCode:
                    type: string
                ip:
                    type: string
                deviceID:
                    type: string
                platform:
                    type: integer
                    format: int32
                autoLogin:
                    type: boolean
                user:
                    $ref: '#/components/schemas/RegisterUserInfo'
        RegisterUserResp:
            type: object
            properties:
                userID:
                    type: string
                chatToken:
                    type: string
        RequestPagination:
            type: object
            properties:
                pageNumber:
                    type: integer
                    format: int32
                showNumber:
                    type: integer
                    format: int32
        ResetPasswordReq:
            type: object
            properties:
                password:
                    type: string
                    description: |-
                        string areaCode = 1;
                          string phoneNumber = 2;
                          string verifyCode = 3;
        ResetPasswordResp:
            type: object
            properties: {}
        SearchUserFullInfoReq:
            type: object
            properties:
                keyword:
                    type: string
                pagination:
                    $ref: '#/components/schemas/RequestPagination'
                genders:
                    type: integer
                    format: int32
                normal:
                    type: integer
                    format: int32
        SearchUserFullInfoResp:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserFullInfo'
        SendVerifyCodeReq:
            type: object
            properties:
                usedFor:
                    type: integer
                    format: int32
                ip:
                    type: string
                invitationCode:
                    type: string
                deviceID:
                    type: string
                platform:
                    type: integer
                    format: int32
                areaCode:
                    type: string
                phoneNumber:
                    type: string
                email:
                    type: string
        SendVerifyCodeResp:
            type: object
            properties: {}
        SendVerifyImgCodeReq:
            type: object
            properties:
                usedFor:
                    type: integer
                    format: int32
                ip:
                    type: string
                invitationCode:
                    type: string
                deviceID:
                    type: string
                platform:
                    type: integer
                    format: int32
        SendVerifyImgCodeResp:
            type: object
            properties:
                img:
                    type: string
                key:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserInfoReq:
            type: object
            properties:
                userInfo:
                    $ref: '#/components/schemas/UserInfo'
        UpdateUserInfoResp:
            type: object
            properties: {}
        UserFullInfo:
            type: object
            properties:
                userID:
                    type: string
                password:
                    type: string
                account:
                    type: string
                phoneNumber:
                    type: string
                areaCode:
                    type: string
                email:
                    type: string
                nickname:
                    type: string
                faceURL:
                    type: string
                gender:
                    type: integer
                    format: int32
                level:
                    type: integer
                    format: int32
                birth:
                    type: string
                allowAddFriend:
                    type: integer
                    format: int32
                allowBeep:
                    type: integer
                    format: int32
                allowVibration:
                    type: integer
                    format: int32
                globalRecvMsgOpt:
                    type: integer
                    format: int32
                registerType:
                    type: integer
                    format: int32
                createTime:
                    type: string
                changeTime:
                    type: string
                lastLoginTime:
                    type: string
                operator:
                    type: string
                userStatus:
                    type: integer
                    format: int32
                onlineStatus:
                    type: integer
                    format: int32
        UserInfo:
            type: object
            properties:
                userID:
                    type: string
                nickname:
                    type: string
                account:
                    type: string
                password:
                    type: string
        VerifyCodeReq:
            type: object
            properties:
                areaCode:
                    type: string
                phoneNumber:
                    type: string
                verifyCode:
                    type: string
                email:
                    type: string
                key:
                    type: string
        VerifyCodeResp:
            type: object
            properties: {}
        VerifyImgCodeReq:
            type: object
            properties:
                verifyCode:
                    type: string
                key:
                    type: string
        VerifyImgCodeResp:
            type: object
            properties: {}
tags:
    - name: Chat
