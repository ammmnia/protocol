// Copyright © 2023 OpenIM open source community. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.2
// source: openchat/admin/admin.proto

package admin

import (
	sdkws "github.com/ammmnia/protocol/sdkws"
	wrapperspb "github.com/ammmnia/protocol/wrapperspb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// login
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAccount string `protobuf:"bytes,1,opt,name=adminAccount,proto3" json:"adminAccount,omitempty"`
	AdminToken   string `protobuf:"bytes,2,opt,name=adminToken,proto3" json:"adminToken,omitempty"`
	Nickname     string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL      string `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Level        int32  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	AdminUserID  string `protobuf:"bytes,6,opt,name=adminUserID,proto3" json:"adminUserID,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResp) GetAdminAccount() string {
	if x != nil {
		return x.AdminAccount
	}
	return ""
}

func (x *LoginResp) GetAdminToken() string {
	if x != nil {
		return x.AdminToken
	}
	return ""
}

func (x *LoginResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LoginResp) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *LoginResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LoginResp) GetAdminUserID() string {
	if x != nil {
		return x.AdminUserID
	}
	return ""
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{2}
}

func (x *LogoutReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type LogoutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutResp) Reset() {
	*x = LogoutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResp) ProtoMessage() {}

func (x *LogoutResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResp.ProtoReflect.Descriptor instead.
func (*LogoutResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{3}
}

type AddAdminAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` //用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"` //姓名
	RoleId   uint64 `protobuf:"varint,5,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Desc     string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Status   uint32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"` //状态 1:正常，2:禁用
}

func (x *AddAdminAccountReq) Reset() {
	*x = AddAdminAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminAccountReq) ProtoMessage() {}

func (x *AddAdminAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminAccountReq.ProtoReflect.Descriptor instead.
func (*AddAdminAccountReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AddAdminAccountReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AddAdminAccountReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddAdminAccountReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddAdminAccountReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddAdminAccountReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddAdminAccountReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddAdminAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAdminAccountResp) Reset() {
	*x = AddAdminAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminAccountResp) ProtoMessage() {}

func (x *AddAdminAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminAccountResp.ProtoReflect.Descriptor instead.
func (*AddAdminAccountResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{5}
}

type AdminUpdateInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string                  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Account  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Nickname *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Status   *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	RoleId   *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Desc     *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AdminUpdateInfoReq) Reset() {
	*x = AdminUpdateInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateInfoReq) ProtoMessage() {}

func (x *AdminUpdateInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateInfoReq.ProtoReflect.Descriptor instead.
func (*AdminUpdateInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{6}
}

func (x *AdminUpdateInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AdminUpdateInfoReq) GetAccount() *wrapperspb.StringValue {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AdminUpdateInfoReq) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *AdminUpdateInfoReq) GetNickname() *wrapperspb.StringValue {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *AdminUpdateInfoReq) GetStatus() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AdminUpdateInfoReq) GetRoleId() *wrapperspb.UInt64Value {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *AdminUpdateInfoReq) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

type AdminUpdateInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Account  string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL  string `protobuf:"bytes,5,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
}

func (x *AdminUpdateInfoResp) Reset() {
	*x = AdminUpdateInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateInfoResp) ProtoMessage() {}

func (x *AdminUpdateInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateInfoResp.ProtoReflect.Descriptor instead.
func (*AdminUpdateInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdminUpdateInfoResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AdminUpdateInfoResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AdminUpdateInfoResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AdminUpdateInfoResp) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

type ChangePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ChangePasswordReq) Reset() {
	*x = ChangePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordReq) ProtoMessage() {}

func (x *ChangePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordReq.ProtoReflect.Descriptor instead.
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{8}
}

func (x *ChangePasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ChangePasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePasswordResp) Reset() {
	*x = ChangePasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResp) ProtoMessage() {}

func (x *ChangePasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResp.ProtoReflect.Descriptor instead.
func (*ChangePasswordResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{9}
}

type GetAdminInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetAdminInfoReq) Reset() {
	*x = GetAdminInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminInfoReq) ProtoMessage() {}

func (x *GetAdminInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminInfoReq.ProtoReflect.Descriptor instead.
func (*GetAdminInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{10}
}

func (x *GetAdminInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type ChangeAdminPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CurrentPassword string `protobuf:"bytes,2,opt,name=currentPassword,proto3" json:"currentPassword,omitempty"`
	NewPassword     string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *ChangeAdminPasswordReq) Reset() {
	*x = ChangeAdminPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminPasswordReq) ProtoMessage() {}

func (x *ChangeAdminPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminPasswordReq.ProtoReflect.Descriptor instead.
func (*ChangeAdminPasswordReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeAdminPasswordReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ChangeAdminPasswordReq) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *ChangeAdminPasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ChangeAdminPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeAdminPasswordResp) Reset() {
	*x = ChangeAdminPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminPasswordResp) ProtoMessage() {}

func (x *ChangeAdminPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminPasswordResp.ProtoReflect.Descriptor instead.
func (*ChangeAdminPasswordResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{12}
}

type SearchAdminAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Nickname   string                   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RoleId     uint64                   `protobuf:"varint,4,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UpdateBy   string                   `protobuf:"bytes,5,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Status     uint32                   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	StartTime  string                   `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *SearchAdminAccountReq) Reset() {
	*x = SearchAdminAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAdminAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAdminAccountReq) ProtoMessage() {}

func (x *SearchAdminAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAdminAccountReq.ProtoReflect.Descriptor instead.
func (*SearchAdminAccountReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{13}
}

func (x *SearchAdminAccountReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchAdminAccountReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SearchAdminAccountReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SearchAdminAccountReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *SearchAdminAccountReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchAdminAccountReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchAdminAccountReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type SearchAdminAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         uint64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Pages         uint64              `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	AdminAccounts []*GetAdminInfoResp `protobuf:"bytes,3,rep,name=adminAccounts,proto3" json:"adminAccounts,omitempty"`
}

func (x *SearchAdminAccountResp) Reset() {
	*x = SearchAdminAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAdminAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAdminAccountResp) ProtoMessage() {}

func (x *SearchAdminAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAdminAccountResp.ProtoReflect.Descriptor instead.
func (*SearchAdminAccountResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{14}
}

func (x *SearchAdminAccountResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchAdminAccountResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *SearchAdminAccountResp) GetAdminAccounts() []*GetAdminInfoResp {
	if x != nil {
		return x.AdminAccounts
	}
	return nil
}

type GetAdminInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	FaceURL         string `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Nickname        string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserID          string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	Desc            string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	RoleCode        string `protobuf:"bytes,9,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	RoleName        string `protobuf:"bytes,10,opt,name=roleName,proto3" json:"roleName,omitempty"`
	Status          uint32 `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy        string `protobuf:"bytes,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime      int64  `protobuf:"varint,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	LatestLoginTime int64  `protobuf:"varint,14,opt,name=latestLoginTime,proto3" json:"latestLoginTime,omitempty"`
	RoleId          uint64 `protobuf:"varint,15,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *GetAdminInfoResp) Reset() {
	*x = GetAdminInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminInfoResp) ProtoMessage() {}

func (x *GetAdminInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminInfoResp.ProtoReflect.Descriptor instead.
func (*GetAdminInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{15}
}

func (x *GetAdminInfoResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetAdminInfoResp) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *GetAdminInfoResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetAdminInfoResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetAdminInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetAdminInfoResp) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *GetAdminInfoResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *GetAdminInfoResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAdminInfoResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *GetAdminInfoResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *GetAdminInfoResp) GetLatestLoginTime() int64 {
	if x != nil {
		return x.LatestLoginTime
	}
	return 0
}

func (x *GetAdminInfoResp) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type DisableAdminAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //状态 1:正常，2:禁用
}

func (x *DisableAdminAccountReq) Reset() {
	*x = DisableAdminAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAdminAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAdminAccountReq) ProtoMessage() {}

func (x *DisableAdminAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAdminAccountReq.ProtoReflect.Descriptor instead.
func (*DisableAdminAccountReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{16}
}

func (x *DisableAdminAccountReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DisableAdminAccountReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DisableAdminAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableAdminAccountResp) Reset() {
	*x = DisableAdminAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAdminAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAdminAccountResp) ProtoMessage() {}

func (x *DisableAdminAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAdminAccountResp.ProtoReflect.Descriptor instead.
func (*DisableAdminAccountResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{17}
}

type CreateTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Account  string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	UserType int32  `protobuf:"varint,32,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *CreateTokenReq) Reset() {
	*x = CreateTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenReq) ProtoMessage() {}

func (x *CreateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenReq.ProtoReflect.Descriptor instead.
func (*CreateTokenReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTokenReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateTokenReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateTokenReq) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type CreateTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateTokenResp) Reset() {
	*x = CreateTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenResp) ProtoMessage() {}

func (x *CreateTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenResp.ProtoReflect.Descriptor instead.
func (*CreateTokenResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{19}
}

func (x *CreateTokenResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ParseTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ParseTokenReq) Reset() {
	*x = ParseTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenReq) ProtoMessage() {}

func (x *ParseTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenReq.ProtoReflect.Descriptor instead.
func (*ParseTokenReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{20}
}

func (x *ParseTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ParseTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Account           string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	UserType          int32  `protobuf:"varint,3,opt,name=userType,proto3" json:"userType,omitempty"`
	ExpireTimeSeconds int64  `protobuf:"varint,4,opt,name=expireTimeSeconds,proto3" json:"expireTimeSeconds,omitempty"`
}

func (x *ParseTokenResp) Reset() {
	*x = ParseTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenResp) ProtoMessage() {}

func (x *ParseTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenResp.ProtoReflect.Descriptor instead.
func (*ParseTokenResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{21}
}

func (x *ParseTokenResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ParseTokenResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ParseTokenResp) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *ParseTokenResp) GetExpireTimeSeconds() int64 {
	if x != nil {
		return x.ExpireTimeSeconds
	}
	return 0
}

type InvalidateTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *InvalidateTokenReq) Reset() {
	*x = InvalidateTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateTokenReq) ProtoMessage() {}

func (x *InvalidateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateTokenReq.ProtoReflect.Descriptor instead.
func (*InvalidateTokenReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{22}
}

func (x *InvalidateTokenReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type InvalidateTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidateTokenResp) Reset() {
	*x = InvalidateTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateTokenResp) ProtoMessage() {}

func (x *InvalidateTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateTokenResp.ProtoReflect.Descriptor instead.
func (*InvalidateTokenResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{23}
}

type GetUserTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserTokenReq) Reset() {
	*x = GetUserTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTokenReq) ProtoMessage() {}

func (x *GetUserTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTokenReq.ProtoReflect.Descriptor instead.
func (*GetUserTokenReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserTokenReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokensMap map[string]int32 `protobuf:"bytes,1,rep,name=tokensMap,proto3" json:"tokensMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserTokenResp) Reset() {
	*x = GetUserTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTokenResp) ProtoMessage() {}

func (x *GetUserTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTokenResp.ProtoReflect.Descriptor instead.
func (*GetUserTokenResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserTokenResp) GetTokensMap() map[string]int32 {
	if x != nil {
		return x.TokensMap
	}
	return nil
}

type UpdateMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName     string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	MenuType     uint32 `protobuf:"varint,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	MenuParentId uint64 `protobuf:"varint,3,opt,name=menuParentId,proto3" json:"menuParentId,omitempty"`
	Sort         uint64 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon         string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Path         string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	IsCache      uint32 `protobuf:"varint,7,opt,name=isCache,proto3" json:"isCache,omitempty"`
	Status       uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	MenuId       uint64 `protobuf:"varint,9,opt,name=menuId,proto3" json:"menuId,omitempty"`
}

func (x *UpdateMenuReq) Reset() {
	*x = UpdateMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuReq) ProtoMessage() {}

func (x *UpdateMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuType() uint32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuParentId() uint64 {
	if x != nil {
		return x.MenuParentId
	}
	return 0
}

func (x *UpdateMenuReq) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateMenuReq) GetIsCache() uint32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *UpdateMenuReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuId() uint64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type MenuInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId uint64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
}

func (x *MenuInfoReq) Reset() {
	*x = MenuInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoReq) ProtoMessage() {}

func (x *MenuInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoReq.ProtoReflect.Descriptor instead.
func (*MenuInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{27}
}

func (x *MenuInfoReq) GetMenuId() uint64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type AddMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName     string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	MenuType     uint32 `protobuf:"varint,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	MenuParentId uint64 `protobuf:"varint,3,opt,name=menuParentId,proto3" json:"menuParentId,omitempty"`
	Sort         uint64 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon         string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Path         string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	IsCache      uint32 `protobuf:"varint,7,opt,name=isCache,proto3" json:"isCache,omitempty"`
	Status       uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Desc         string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AddMenuReq) Reset() {
	*x = AddMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuReq) ProtoMessage() {}

func (x *AddMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuReq.ProtoReflect.Descriptor instead.
func (*AddMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{28}
}

func (x *AddMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *AddMenuReq) GetMenuType() uint32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *AddMenuReq) GetMenuParentId() uint64 {
	if x != nil {
		return x.MenuParentId
	}
	return 0
}

func (x *AddMenuReq) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AddMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddMenuReq) GetIsCache() uint32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *AddMenuReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMenuReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type DelMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId uint64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
}

func (x *DelMenuReq) Reset() {
	*x = DelMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMenuReq) ProtoMessage() {}

func (x *DelMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMenuReq.ProtoReflect.Descriptor instead.
func (*DelMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{29}
}

func (x *DelMenuReq) GetMenuId() uint64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type UpdateMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMenuResp) Reset() {
	*x = UpdateMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuResp) ProtoMessage() {}

func (x *UpdateMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{30}
}

type SearchMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName   string                   `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	MenuType   uint32                   `protobuf:"varint,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	Path       string                   `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Status     uint32                   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	RoleCode   string                   `protobuf:"bytes,9,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	UpdateBy   string                   `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	StartTime  string                   `protobuf:"bytes,11,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,12,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,13,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchMenuReq) Reset() {
	*x = SearchMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuReq) ProtoMessage() {}

func (x *SearchMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuReq.ProtoReflect.Descriptor instead.
func (*SearchMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{31}
}

func (x *SearchMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SearchMenuReq) GetMenuType() uint32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *SearchMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SearchMenuReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchMenuReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *SearchMenuReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *SearchMenuReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchMenuReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchMenuReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DisableMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId uint64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DisableMenuReq) Reset() {
	*x = DisableMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMenuReq) ProtoMessage() {}

func (x *DisableMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMenuReq.ProtoReflect.Descriptor instead.
func (*DisableMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{32}
}

func (x *DisableMenuReq) GetMenuId() uint64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *DisableMenuReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SearchMenuTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId []uint64 `protobuf:"varint,1,rep,packed,name=menuId,proto3" json:"menuId,omitempty"` //如果为空，或者只有一个0，则是查询整个菜单树，否则查询指定菜单
}

func (x *SearchMenuTreeReq) Reset() {
	*x = SearchMenuTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuTreeReq) ProtoMessage() {}

func (x *SearchMenuTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuTreeReq.ProtoReflect.Descriptor instead.
func (*SearchMenuTreeReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{33}
}

func (x *SearchMenuTreeReq) GetMenuId() []uint64 {
	if x != nil {
		return x.MenuId
	}
	return nil
}

type SearchMenuTreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuTreeMap map[string]string `protobuf:"bytes,1,rep,name=menuTreeMap,proto3" json:"menuTreeMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchMenuTreeResp) Reset() {
	*x = SearchMenuTreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuTreeResp) ProtoMessage() {}

func (x *SearchMenuTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuTreeResp.ProtoReflect.Descriptor instead.
func (*SearchMenuTreeResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{34}
}

func (x *SearchMenuTreeResp) GetMenuTreeMap() map[string]string {
	if x != nil {
		return x.MenuTreeMap
	}
	return nil
}

type MenuInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName     string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	MenuType     uint32 `protobuf:"varint,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	MenuParentId uint64 `protobuf:"varint,3,opt,name=menuParentId,proto3" json:"menuParentId,omitempty"`
	Sort         uint64 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Icon         string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Path         string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	IsCache      uint32 `protobuf:"varint,7,opt,name=isCache,proto3" json:"isCache,omitempty"`
	Status       uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	MenuId       uint64 `protobuf:"varint,9,opt,name=menuId,proto3" json:"menuId,omitempty"`
	UpdateBy     string `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime   int64  `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	RoleCode     string `protobuf:"bytes,12,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
}

func (x *MenuInfoResp) Reset() {
	*x = MenuInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoResp) ProtoMessage() {}

func (x *MenuInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoResp.ProtoReflect.Descriptor instead.
func (*MenuInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{35}
}

func (x *MenuInfoResp) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuInfoResp) GetMenuType() uint32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *MenuInfoResp) GetMenuParentId() uint64 {
	if x != nil {
		return x.MenuParentId
	}
	return 0
}

func (x *MenuInfoResp) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuInfoResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuInfoResp) GetIsCache() uint32 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *MenuInfoResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuInfoResp) GetMenuId() uint64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *MenuInfoResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuInfoResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *MenuInfoResp) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

type AddMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMenuResp) Reset() {
	*x = AddMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuResp) ProtoMessage() {}

func (x *AddMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuResp.ProtoReflect.Descriptor instead.
func (*AddMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{36}
}

type DelMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMenuResp) Reset() {
	*x = DelMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMenuResp) ProtoMessage() {}

func (x *DelMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMenuResp.ProtoReflect.Descriptor instead.
func (*DelMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{37}
}

type SearchMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuInfo []*MenuInfoResp `protobuf:"bytes,1,rep,name=menuInfo,proto3" json:"menuInfo,omitempty"`
	Total    uint64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages    uint64          `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *SearchMenuResp) Reset() {
	*x = SearchMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMenuResp) ProtoMessage() {}

func (x *SearchMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMenuResp.ProtoReflect.Descriptor instead.
func (*SearchMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{38}
}

func (x *SearchMenuResp) GetMenuInfo() []*MenuInfoResp {
	if x != nil {
		return x.MenuInfo
	}
	return nil
}

func (x *SearchMenuResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchMenuResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type DisableMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableMenuResp) Reset() {
	*x = DisableMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMenuResp) ProtoMessage() {}

func (x *DisableMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMenuResp.ProtoReflect.Descriptor instead.
func (*DisableMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{39}
}

type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId   uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RoleCode string `protobuf:"bytes,3,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Desc     string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Status   uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateRoleReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *UpdateRoleReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateRoleReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRoleResp) Reset() {
	*x = UpdateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResp) ProtoMessage() {}

func (x *UpdateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{41}
}

type RoleInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *RoleInfoReq) Reset() {
	*x = RoleInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoReq) ProtoMessage() {}

func (x *RoleInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoReq.ProtoReflect.Descriptor instead.
func (*RoleInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{42}
}

func (x *RoleInfoReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type RoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId     uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	RoleName   string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RoleCode   string `protobuf:"bytes,3,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Status     uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy   string `protobuf:"bytes,6,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime int64  `protobuf:"varint,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *RoleInfoResp) Reset() {
	*x = RoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoResp) ProtoMessage() {}

func (x *RoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoResp.ProtoReflect.Descriptor instead.
func (*RoleInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{43}
}

func (x *RoleInfoResp) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleInfoResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleInfoResp) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *RoleInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RoleInfoResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleInfoResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *RoleInfoResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RoleCode string `protobuf:"bytes,2,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Desc     string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Status   uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddRoleReq) Reset() {
	*x = AddRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleReq) ProtoMessage() {}

func (x *AddRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleReq.ProtoReflect.Descriptor instead.
func (*AddRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{44}
}

func (x *AddRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddRoleReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *AddRoleReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddRoleReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRoleResp) Reset() {
	*x = AddRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleResp) ProtoMessage() {}

func (x *AddRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleResp.ProtoReflect.Descriptor instead.
func (*AddRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{45}
}

type SearchAllRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchAllRoleReq) Reset() {
	*x = SearchAllRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllRoleReq) ProtoMessage() {}

func (x *SearchAllRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllRoleReq.ProtoReflect.Descriptor instead.
func (*SearchAllRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{46}
}

type SearchAllRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*RoleInfoResp `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *SearchAllRoleResp) Reset() {
	*x = SearchAllRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllRoleResp) ProtoMessage() {}

func (x *SearchAllRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllRoleResp.ProtoReflect.Descriptor instead.
func (*SearchAllRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{47}
}

func (x *SearchAllRoleResp) GetRoles() []*RoleInfoResp {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 删除角色，会删除该角色绑定的所有菜单，但是绑定该角色的用户不会删除
// 没有角色的用户不会展示任何菜单
type DelRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *DelRoleReq) Reset() {
	*x = DelRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleReq) ProtoMessage() {}

func (x *DelRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleReq.ProtoReflect.Descriptor instead.
func (*DelRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{48}
}

func (x *DelRoleReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type DelRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRoleResp) Reset() {
	*x = DelRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleResp) ProtoMessage() {}

func (x *DelRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleResp.ProtoReflect.Descriptor instead.
func (*DelRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{49}
}

type SearchRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName   string                   `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RoleCode   string                   `protobuf:"bytes,2,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	Status     uint32                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy   string                   `protobuf:"bytes,5,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	StartTime  string                   `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,8,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchRoleReq) Reset() {
	*x = SearchRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleReq) ProtoMessage() {}

func (x *SearchRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleReq.ProtoReflect.Descriptor instead.
func (*SearchRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{50}
}

func (x *SearchRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SearchRoleReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *SearchRoleReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchRoleReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *SearchRoleReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchRoleReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchRoleReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleInfo []*RoleInfoResp `protobuf:"bytes,1,rep,name=roleInfo,proto3" json:"roleInfo,omitempty"`
	Total    uint64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages    uint64          `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *SearchRoleResp) Reset() {
	*x = SearchRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleResp) ProtoMessage() {}

func (x *SearchRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleResp.ProtoReflect.Descriptor instead.
func (*SearchRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{51}
}

func (x *SearchRoleResp) GetRoleInfo() []*RoleInfoResp {
	if x != nil {
		return x.RoleInfo
	}
	return nil
}

func (x *SearchRoleResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchRoleResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type DisableRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DisableRoleReq) Reset() {
	*x = DisableRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRoleReq) ProtoMessage() {}

func (x *DisableRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRoleReq.ProtoReflect.Descriptor instead.
func (*DisableRoleReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{52}
}

func (x *DisableRoleReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *DisableRoleReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DisableRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableRoleResp) Reset() {
	*x = DisableRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRoleResp) ProtoMessage() {}

func (x *DisableRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRoleResp.ProtoReflect.Descriptor instead.
func (*DisableRoleResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{53}
}

type UpdateRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  uint64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []uint64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *UpdateRoleMenuReq) Reset() {
	*x = UpdateRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleMenuReq) ProtoMessage() {}

func (x *UpdateRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateRoleMenuReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleMenuReq) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRoleMenuResp) Reset() {
	*x = UpdateRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleMenuResp) ProtoMessage() {}

func (x *UpdateRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{55}
}

type RoleMenuInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *RoleMenuInfoReq) Reset() {
	*x = RoleMenuInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuInfoReq) ProtoMessage() {}

func (x *RoleMenuInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuInfoReq.ProtoReflect.Descriptor instead.
func (*RoleMenuInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{56}
}

func (x *RoleMenuInfoReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type RoleMenuInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  uint64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []uint64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *RoleMenuInfoResp) Reset() {
	*x = RoleMenuInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuInfoResp) ProtoMessage() {}

func (x *RoleMenuInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuInfoResp.ProtoReflect.Descriptor instead.
func (*RoleMenuInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{57}
}

func (x *RoleMenuInfoResp) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleMenuInfoResp) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type AddRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  uint64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	MenuIds []uint64 `protobuf:"varint,2,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *AddRoleMenuReq) Reset() {
	*x = AddRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleMenuReq) ProtoMessage() {}

func (x *AddRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleMenuReq.ProtoReflect.Descriptor instead.
func (*AddRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{58}
}

func (x *AddRoleMenuReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddRoleMenuReq) GetMenuIds() []uint64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type AddRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRoleMenuResp) Reset() {
	*x = AddRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleMenuResp) ProtoMessage() {}

func (x *AddRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleMenuResp.ProtoReflect.Descriptor instead.
func (*AddRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{59}
}

// 删除该角色绑定的所有菜单
type DelRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *DelRoleMenuReq) Reset() {
	*x = DelRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleMenuReq) ProtoMessage() {}

func (x *DelRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleMenuReq.ProtoReflect.Descriptor instead.
func (*DelRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{60}
}

func (x *DelRoleMenuReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type DelRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRoleMenuResp) Reset() {
	*x = DelRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleMenuResp) ProtoMessage() {}

func (x *DelRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleMenuResp.ProtoReflect.Descriptor instead.
func (*DelRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{61}
}

type SearchAllMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchAllMenuReq) Reset() {
	*x = SearchAllMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllMenuReq) ProtoMessage() {}

func (x *SearchAllMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllMenuReq.ProtoReflect.Descriptor instead.
func (*SearchAllMenuReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{62}
}

type SearchAllMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuInfo []*MenuInfoResp `protobuf:"bytes,1,rep,name=menuInfo,proto3" json:"menuInfo,omitempty"`
}

func (x *SearchAllMenuResp) Reset() {
	*x = SearchAllMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllMenuResp) ProtoMessage() {}

func (x *SearchAllMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllMenuResp.ProtoReflect.Descriptor instead.
func (*SearchAllMenuResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{63}
}

func (x *SearchAllMenuResp) GetMenuInfo() []*MenuInfoResp {
	if x != nil {
		return x.MenuInfo
	}
	return nil
}

type UpdateDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType uint32 `protobuf:"varint,2,opt,name=dictType,proto3" json:"dictType,omitempty"` //1:系统类，2:业务类
	Status   uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`     //1:正常， 2:禁用
	Desc     string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	DictId   uint64 `protobuf:"varint,5,opt,name=dictId,proto3" json:"dictId,omitempty"`
	DictCode string `protobuf:"bytes,6,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *UpdateDictReq) Reset() {
	*x = UpdateDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictReq) ProtoMessage() {}

func (x *UpdateDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictReq.ProtoReflect.Descriptor instead.
func (*UpdateDictReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *UpdateDictReq) GetDictType() uint32 {
	if x != nil {
		return x.DictType
	}
	return 0
}

func (x *UpdateDictReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDictReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateDictReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *UpdateDictReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

type UpdateDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDictResp) Reset() {
	*x = UpdateDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictResp) ProtoMessage() {}

func (x *UpdateDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictResp.ProtoReflect.Descriptor instead.
func (*UpdateDictResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{65}
}

type DictInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId uint64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *DictInfoReq) Reset() {
	*x = DictInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfoReq) ProtoMessage() {}

func (x *DictInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfoReq.ProtoReflect.Descriptor instead.
func (*DictInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{66}
}

func (x *DictInfoReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type DictInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName   string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType   uint32 `protobuf:"varint,2,opt,name=dictType,proto3" json:"dictType,omitempty"` //1:系统类，2:业务类
	Status     uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`     //1:正常， 2:禁用
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	DictId     uint64 `protobuf:"varint,5,opt,name=dictId,proto3" json:"dictId,omitempty"`
	DictCode   string `protobuf:"bytes,6,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	UpdateBy   string `protobuf:"bytes,7,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime int64  `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *DictInfoResp) Reset() {
	*x = DictInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfoResp) ProtoMessage() {}

func (x *DictInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfoResp.ProtoReflect.Descriptor instead.
func (*DictInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{67}
}

func (x *DictInfoResp) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictInfoResp) GetDictType() uint32 {
	if x != nil {
		return x.DictType
	}
	return 0
}

func (x *DictInfoResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DictInfoResp) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *DictInfoResp) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictInfoResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *DictInfoResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictType uint32 `protobuf:"varint,2,opt,name=dictType,proto3" json:"dictType,omitempty"` //1:系统类，2:业务类
	Status   uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`     //1:正常， 2:禁用
	Desc     string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	DictCode string `protobuf:"bytes,6,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *AddDictReq) Reset() {
	*x = AddDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictReq) ProtoMessage() {}

func (x *AddDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictReq.ProtoReflect.Descriptor instead.
func (*AddDictReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{68}
}

func (x *AddDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *AddDictReq) GetDictType() uint32 {
	if x != nil {
		return x.DictType
	}
	return 0
}

func (x *AddDictReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddDictReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddDictReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

type AddDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDictResp) Reset() {
	*x = AddDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictResp) ProtoMessage() {}

func (x *AddDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictResp.ProtoReflect.Descriptor instead.
func (*AddDictResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{69}
}

type DelDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId uint64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *DelDictReq) Reset() {
	*x = DelDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictReq) ProtoMessage() {}

func (x *DelDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictReq.ProtoReflect.Descriptor instead.
func (*DelDictReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{70}
}

func (x *DelDictReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type DelDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDictResp) Reset() {
	*x = DelDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictResp) ProtoMessage() {}

func (x *DelDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictResp.ProtoReflect.Descriptor instead.
func (*DelDictResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{71}
}

type SearchDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName   string                   `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictCode   string                   `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	Status     uint32                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy   string                   `protobuf:"bytes,5,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	StartTime  string                   `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,8,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchDictReq) Reset() {
	*x = SearchDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDictReq) ProtoMessage() {}

func (x *SearchDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDictReq.ProtoReflect.Descriptor instead.
func (*SearchDictReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{72}
}

func (x *SearchDictReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SearchDictReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SearchDictReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchDictReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *SearchDictReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchDictReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchDictReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictInfo []*DictInfoResp `protobuf:"bytes,1,rep,name=dictInfo,proto3" json:"dictInfo,omitempty"`
	Total    uint64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages    uint64          `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *SearchDictResp) Reset() {
	*x = SearchDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDictResp) ProtoMessage() {}

func (x *SearchDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDictResp.ProtoReflect.Descriptor instead.
func (*SearchDictResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{73}
}

func (x *SearchDictResp) GetDictInfo() []*DictInfoResp {
	if x != nil {
		return x.DictInfo
	}
	return nil
}

func (x *SearchDictResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchDictResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type DisableDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId uint64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DisableDictReq) Reset() {
	*x = DisableDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableDictReq) ProtoMessage() {}

func (x *DisableDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableDictReq.ProtoReflect.Descriptor instead.
func (*DisableDictReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{74}
}

func (x *DisableDictReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *DisableDictReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DisableDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableDictResp) Reset() {
	*x = DisableDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableDictResp) ProtoMessage() {}

func (x *DisableDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableDictResp.ProtoReflect.Descriptor instead.
func (*DisableDictResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{75}
}

type UpdateDictDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName     string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictCode     string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	Status       uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	DictValue    string `protobuf:"bytes,5,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	Desc         string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Sort         uint64 `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`
	DictDetailId uint64 `protobuf:"varint,8,opt,name=dictDetailId,proto3" json:"dictDetailId,omitempty"`
}

func (x *UpdateDictDetailReq) Reset() {
	*x = UpdateDictDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDetailReq) ProtoMessage() {}

func (x *UpdateDictDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDetailReq.ProtoReflect.Descriptor instead.
func (*UpdateDictDetailReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateDictDetailReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *UpdateDictDetailReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *UpdateDictDetailReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDictDetailReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *UpdateDictDetailReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateDictDetailReq) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateDictDetailReq) GetDictDetailId() uint64 {
	if x != nil {
		return x.DictDetailId
	}
	return 0
}

type UpdateDictDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDictDetailResp) Reset() {
	*x = UpdateDictDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDetailResp) ProtoMessage() {}

func (x *UpdateDictDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDetailResp.ProtoReflect.Descriptor instead.
func (*UpdateDictDetailResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{77}
}

type DictDetailInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictDetailId uint64 `protobuf:"varint,1,opt,name=dictDetailId,proto3" json:"dictDetailId,omitempty"`
}

func (x *DictDetailInfoReq) Reset() {
	*x = DictDetailInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetailInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetailInfoReq) ProtoMessage() {}

func (x *DictDetailInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetailInfoReq.ProtoReflect.Descriptor instead.
func (*DictDetailInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{78}
}

func (x *DictDetailInfoReq) GetDictDetailId() uint64 {
	if x != nil {
		return x.DictDetailId
	}
	return 0
}

type DictDetailInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName     string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictCode     string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	Status       uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	DictValue    string `protobuf:"bytes,5,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	Desc         string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Sort         uint64 `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`
	DictDetailId uint64 `protobuf:"varint,8,opt,name=dictDetailId,proto3" json:"dictDetailId,omitempty"`
}

func (x *DictDetailInfoResp) Reset() {
	*x = DictDetailInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetailInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetailInfoResp) ProtoMessage() {}

func (x *DictDetailInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetailInfoResp.ProtoReflect.Descriptor instead.
func (*DictDetailInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{79}
}

func (x *DictDetailInfoResp) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictDetailInfoResp) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictDetailInfoResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDetailInfoResp) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDetailInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DictDetailInfoResp) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DictDetailInfoResp) GetDictDetailId() uint64 {
	if x != nil {
		return x.DictDetailId
	}
	return 0
}

type AddDictDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictName  string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	DictCode  string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	Status    uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	DictValue string `protobuf:"bytes,5,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	Desc      string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Sort      uint64 `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`
	DictId    uint64 `protobuf:"varint,8,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *AddDictDetailReq) Reset() {
	*x = AddDictDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictDetailReq) ProtoMessage() {}

func (x *AddDictDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictDetailReq.ProtoReflect.Descriptor instead.
func (*AddDictDetailReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{80}
}

func (x *AddDictDetailReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *AddDictDetailReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *AddDictDetailReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddDictDetailReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *AddDictDetailReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddDictDetailReq) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddDictDetailReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type AddDictDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDictDetailResp) Reset() {
	*x = AddDictDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictDetailResp) ProtoMessage() {}

func (x *AddDictDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictDetailResp.ProtoReflect.Descriptor instead.
func (*AddDictDetailResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{81}
}

type DelDictDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictDetailId uint64 `protobuf:"varint,1,opt,name=dictDetailId,proto3" json:"dictDetailId,omitempty"`
}

func (x *DelDictDetailReq) Reset() {
	*x = DelDictDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictDetailReq) ProtoMessage() {}

func (x *DelDictDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictDetailReq.ProtoReflect.Descriptor instead.
func (*DelDictDetailReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{82}
}

func (x *DelDictDetailReq) GetDictDetailId() uint64 {
	if x != nil {
		return x.DictDetailId
	}
	return 0
}

type DelDictDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDictDetailResp) Reset() {
	*x = DelDictDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictDetailResp) ProtoMessage() {}

func (x *DelDictDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictDetailResp.ProtoReflect.Descriptor instead.
func (*DelDictDetailResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{83}
}

type DisableDictDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictDetailId uint64 `protobuf:"varint,1,opt,name=dictDetailId,proto3" json:"dictDetailId,omitempty"`
	Status       uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DisableDictDetailReq) Reset() {
	*x = DisableDictDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableDictDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableDictDetailReq) ProtoMessage() {}

func (x *DisableDictDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableDictDetailReq.ProtoReflect.Descriptor instead.
func (*DisableDictDetailReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{84}
}

func (x *DisableDictDetailReq) GetDictDetailId() uint64 {
	if x != nil {
		return x.DictDetailId
	}
	return 0
}

func (x *DisableDictDetailReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DisableDictDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableDictDetailResp) Reset() {
	*x = DisableDictDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableDictDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableDictDetailResp) ProtoMessage() {}

func (x *DisableDictDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableDictDetailResp.ProtoReflect.Descriptor instead.
func (*DisableDictDetailResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{85}
}

type SearchByDictIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId uint64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *SearchByDictIdReq) Reset() {
	*x = SearchByDictIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByDictIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByDictIdReq) ProtoMessage() {}

func (x *SearchByDictIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByDictIdReq.ProtoReflect.Descriptor instead.
func (*SearchByDictIdReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{86}
}

func (x *SearchByDictIdReq) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type SearchByDictIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictDetailInfos []*DictDetailInfoResp `protobuf:"bytes,1,rep,name=dictDetailInfos,proto3" json:"dictDetailInfos,omitempty"`
}

func (x *SearchByDictIdResp) Reset() {
	*x = SearchByDictIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByDictIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByDictIdResp) ProtoMessage() {}

func (x *SearchByDictIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByDictIdResp.ProtoReflect.Descriptor instead.
func (*SearchByDictIdResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{87}
}

func (x *SearchByDictIdResp) GetDictDetailInfos() []*DictDetailInfoResp {
	if x != nil {
		return x.DictDetailInfos
	}
	return nil
}

type CheckAuthorizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CheckAuthorizeReq) Reset() {
	*x = CheckAuthorizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuthorizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthorizeReq) ProtoMessage() {}

func (x *CheckAuthorizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthorizeReq.ProtoReflect.Descriptor instead.
func (*CheckAuthorizeReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{88}
}

func (x *CheckAuthorizeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckAuthorizeReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CheckAuthorizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass bool `protobuf:"varint,1,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *CheckAuthorizeResp) Reset() {
	*x = CheckAuthorizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuthorizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthorizeResp) ProtoMessage() {}

func (x *CheckAuthorizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthorizeResp.ProtoReflect.Descriptor instead.
func (*CheckAuthorizeResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{89}
}

func (x *CheckAuthorizeResp) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

type CheckIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *CheckIpReq) Reset() {
	*x = CheckIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIpReq) ProtoMessage() {}

func (x *CheckIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIpReq.ProtoReflect.Descriptor instead.
func (*CheckIpReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{90}
}

func (x *CheckIpReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type CheckIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass bool `protobuf:"varint,1,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *CheckIpResp) Reset() {
	*x = CheckIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIpResp) ProtoMessage() {}

func (x *CheckIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIpResp.ProtoReflect.Descriptor instead.
func (*CheckIpResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{91}
}

func (x *CheckIpResp) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

type UpdateIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *UpdateIpReq) Reset() {
	*x = UpdateIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIpReq) ProtoMessage() {}

func (x *UpdateIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIpReq.ProtoReflect.Descriptor instead.
func (*UpdateIpReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateIpReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIpReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UpdateIpReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type UpdateIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIpResp) Reset() {
	*x = UpdateIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIpResp) ProtoMessage() {}

func (x *UpdateIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIpResp.ProtoReflect.Descriptor instead.
func (*UpdateIpResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{93}
}

type IpInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IpInfoReq) Reset() {
	*x = IpInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpInfoReq) ProtoMessage() {}

func (x *IpInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpInfoReq.ProtoReflect.Descriptor instead.
func (*IpInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{94}
}

func (x *IpInfoReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IpInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip         string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	UpdateBy   string `protobuf:"bytes,4,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime int64  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *IpInfoResp) Reset() {
	*x = IpInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpInfoResp) ProtoMessage() {}

func (x *IpInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpInfoResp.ProtoReflect.Descriptor instead.
func (*IpInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{95}
}

func (x *IpInfoResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IpInfoResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *IpInfoResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *IpInfoResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type AddIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AddIpReq) Reset() {
	*x = AddIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIpReq) ProtoMessage() {}

func (x *AddIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIpReq.ProtoReflect.Descriptor instead.
func (*AddIpReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{96}
}

func (x *AddIpReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddIpReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AddIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddIpResp) Reset() {
	*x = AddIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIpResp) ProtoMessage() {}

func (x *AddIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIpResp.ProtoReflect.Descriptor instead.
func (*AddIpResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{97}
}

type DelIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelIpReq) Reset() {
	*x = DelIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIpReq) ProtoMessage() {}

func (x *DelIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIpReq.ProtoReflect.Descriptor instead.
func (*DelIpReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{98}
}

func (x *DelIpReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelIpResp) Reset() {
	*x = DelIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIpResp) ProtoMessage() {}

func (x *DelIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIpResp.ProtoReflect.Descriptor instead.
func (*DelIpResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{99}
}

func (x *DelIpResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string                   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	UpdateBy   string                   `protobuf:"bytes,5,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	StartTime  string                   `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,8,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchIpReq) Reset() {
	*x = SearchIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIpReq) ProtoMessage() {}

func (x *SearchIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIpReq.ProtoReflect.Descriptor instead.
func (*SearchIpReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{100}
}

func (x *SearchIpReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SearchIpReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *SearchIpReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchIpReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchIpReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpInfoList []*IpInfoResp `protobuf:"bytes,1,rep,name=ipInfoList,proto3" json:"ipInfoList,omitempty"`
	Total      uint64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages      uint64        `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *SearchIpResp) Reset() {
	*x = SearchIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIpResp) ProtoMessage() {}

func (x *SearchIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIpResp.ProtoReflect.Descriptor instead.
func (*SearchIpResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{101}
}

func (x *SearchIpResp) GetIpInfoList() []*IpInfoResp {
	if x != nil {
		return x.IpInfoList
	}
	return nil
}

func (x *SearchIpResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchIpResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type LogInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LogInfoReq) Reset() {
	*x = LogInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfoReq) ProtoMessage() {}

func (x *LogInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfoReq.ProtoReflect.Descriptor instead.
func (*LogInfoReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{102}
}

func (x *LogInfoReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LogInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpUser      string `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OpModule    string `protobuf:"bytes,3,opt,name=opModule,proto3" json:"opModule,omitempty"`
	OpTitle     string `protobuf:"bytes,4,opt,name=opTitle,proto3" json:"opTitle,omitempty"`
	OpIp        string `protobuf:"bytes,5,opt,name=opIp,proto3" json:"opIp,omitempty"`
	OpTime      int64  `protobuf:"varint,6,opt,name=opTime,proto3" json:"opTime,omitempty"`
	ReqPath     string `protobuf:"bytes,7,opt,name=reqPath,proto3" json:"reqPath,omitempty"`
	ReqMethod   string `protobuf:"bytes,8,opt,name=reqMethod,proto3" json:"reqMethod,omitempty"`
	ReqParams   string `protobuf:"bytes,9,opt,name=reqParams,proto3" json:"reqParams,omitempty"`
	BrowserInfo string `protobuf:"bytes,10,opt,name=browserInfo,proto3" json:"browserInfo,omitempty"`
	ReturnCode  string `protobuf:"bytes,11,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ReturnMsg   string `protobuf:"bytes,12,opt,name=returnMsg,proto3" json:"returnMsg,omitempty"`
	CreateBy    string `protobuf:"bytes,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime  int64  `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *LogInfoResp) Reset() {
	*x = LogInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfoResp) ProtoMessage() {}

func (x *LogInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfoResp.ProtoReflect.Descriptor instead.
func (*LogInfoResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{103}
}

func (x *LogInfoResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogInfoResp) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *LogInfoResp) GetOpModule() string {
	if x != nil {
		return x.OpModule
	}
	return ""
}

func (x *LogInfoResp) GetOpTitle() string {
	if x != nil {
		return x.OpTitle
	}
	return ""
}

func (x *LogInfoResp) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

func (x *LogInfoResp) GetOpTime() int64 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

func (x *LogInfoResp) GetReqPath() string {
	if x != nil {
		return x.ReqPath
	}
	return ""
}

func (x *LogInfoResp) GetReqMethod() string {
	if x != nil {
		return x.ReqMethod
	}
	return ""
}

func (x *LogInfoResp) GetReqParams() string {
	if x != nil {
		return x.ReqParams
	}
	return ""
}

func (x *LogInfoResp) GetBrowserInfo() string {
	if x != nil {
		return x.BrowserInfo
	}
	return ""
}

func (x *LogInfoResp) GetReturnCode() string {
	if x != nil {
		return x.ReturnCode
	}
	return ""
}

func (x *LogInfoResp) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

func (x *LogInfoResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *LogInfoResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AddLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpModule    string `protobuf:"bytes,1,opt,name=opModule,proto3" json:"opModule,omitempty"`
	OpTitle     string `protobuf:"bytes,2,opt,name=opTitle,proto3" json:"opTitle,omitempty"`
	OpIp        string `protobuf:"bytes,3,opt,name=opIp,proto3" json:"opIp,omitempty"`
	ReqPath     string `protobuf:"bytes,4,opt,name=reqPath,proto3" json:"reqPath,omitempty"`
	ReqMethod   string `protobuf:"bytes,5,opt,name=reqMethod,proto3" json:"reqMethod,omitempty"`
	ReqParams   string `protobuf:"bytes,6,opt,name=reqParams,proto3" json:"reqParams,omitempty"`
	BrowserInfo string `protobuf:"bytes,7,opt,name=browserInfo,proto3" json:"browserInfo,omitempty"`
	ReturnCode  string `protobuf:"bytes,8,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ReturnMsg   string `protobuf:"bytes,9,opt,name=returnMsg,proto3" json:"returnMsg,omitempty"`
}

func (x *AddLogReq) Reset() {
	*x = AddLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogReq) ProtoMessage() {}

func (x *AddLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogReq.ProtoReflect.Descriptor instead.
func (*AddLogReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{104}
}

func (x *AddLogReq) GetOpModule() string {
	if x != nil {
		return x.OpModule
	}
	return ""
}

func (x *AddLogReq) GetOpTitle() string {
	if x != nil {
		return x.OpTitle
	}
	return ""
}

func (x *AddLogReq) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

func (x *AddLogReq) GetReqPath() string {
	if x != nil {
		return x.ReqPath
	}
	return ""
}

func (x *AddLogReq) GetReqMethod() string {
	if x != nil {
		return x.ReqMethod
	}
	return ""
}

func (x *AddLogReq) GetReqParams() string {
	if x != nil {
		return x.ReqParams
	}
	return ""
}

func (x *AddLogReq) GetBrowserInfo() string {
	if x != nil {
		return x.BrowserInfo
	}
	return ""
}

func (x *AddLogReq) GetReturnCode() string {
	if x != nil {
		return x.ReturnCode
	}
	return ""
}

func (x *AddLogReq) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

type AddLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddLogResp) Reset() {
	*x = AddLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogResp) ProtoMessage() {}

func (x *AddLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogResp.ProtoReflect.Descriptor instead.
func (*AddLogResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{105}
}

type DelLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelLogReq) Reset() {
	*x = DelLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelLogReq) ProtoMessage() {}

func (x *DelLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelLogReq.ProtoReflect.Descriptor instead.
func (*DelLogReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{106}
}

func (x *DelLogReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelLogResp) Reset() {
	*x = DelLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelLogResp) ProtoMessage() {}

func (x *DelLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelLogResp.ProtoReflect.Descriptor instead.
func (*DelLogResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{107}
}

func (x *DelLogResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUser     string                   `protobuf:"bytes,1,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OpTitle    string                   `protobuf:"bytes,2,opt,name=opTitle,proto3" json:"opTitle,omitempty"`
	ReturnCode string                   `protobuf:"bytes,3,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	StartTime  string                   `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string                   `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Pagination *sdkws.RequestPagination `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchLogReq) Reset() {
	*x = SearchLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogReq) ProtoMessage() {}

func (x *SearchLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogReq.ProtoReflect.Descriptor instead.
func (*SearchLogReq) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{108}
}

func (x *SearchLogReq) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *SearchLogReq) GetOpTitle() string {
	if x != nil {
		return x.OpTitle
	}
	return ""
}

func (x *SearchLogReq) GetReturnCode() string {
	if x != nil {
		return x.ReturnCode
	}
	return ""
}

func (x *SearchLogReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchLogReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchLogReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogInfoList []*LogInfoResp `protobuf:"bytes,1,rep,name=logInfoList,proto3" json:"logInfoList,omitempty"`
	Total       uint64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages       uint64         `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *SearchLogResp) Reset() {
	*x = SearchLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openchat_admin_admin_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogResp) ProtoMessage() {}

func (x *SearchLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_openchat_admin_admin_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogResp.ProtoReflect.Descriptor instead.
func (*SearchLogResp) Descriptor() ([]byte, []int) {
	return file_openchat_admin_admin_proto_rawDescGZIP(), []int{109}
}

func (x *SearchLogResp) GetLogInfoList() []*LogInfoResp {
	if x != nil {
		return x.LogInfoList
	}
	return nil
}

func (x *SearchLogResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchLogResp) GetPages() uint64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

var File_openchat_admin_admin_proto protoreflect.FileDescriptor

var file_openchat_admin_admin_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x1a, 0x11, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x77, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x70, 0x62, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x25, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0c, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf6,
	0x02, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x38, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x7d, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xf8, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x25, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x61, 0x70,
	0x1a, 0x3c, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf1,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x24, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa4,
	0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b, 0x6d,
	0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x65,
	0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x65, 0x6e,
	0x75, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc8, 0x02, 0x0a, 0x0c, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x7d, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x0c,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x22, 0x4e, 0x0a, 0x11, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf4,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73,
	0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x28,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x22,
	0x54, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x25, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x0d, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xf4, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xcf, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0xce,
	0x01, 0x0a, 0x12, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22,
	0xc0, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x36, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22,
	0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0x69,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x21, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70,
	0x61, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x0e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x0a, 0x09, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x0a, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x2e, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x0b, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a,
	0x0a, 0x08, 0x44, 0x65, 0x6c, 0x49, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89, 0x03, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d,
	0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4d, 0x73, 0x67, 0x22, 0x0c, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd9, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x32, 0x98, 0x28, 0x0a,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x4a, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4d, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x65, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x0a, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x53, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x65, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x54,
	0x72, 0x65, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6e, 0x75,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x50, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x62, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x69, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0c,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x25, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x50, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x63, 0x74, 0x12,
	0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0e, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x62, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6e, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x65, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x70, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x06, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x49, 0x70, 0x12, 0x1f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a,
	0x0a, 0x05, 0x44, 0x65, 0x6c, 0x49, 0x70, 0x12, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x08, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x70, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x50, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4d, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x56, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x23, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x6d, 0x6d, 0x6e, 0x69, 0x61, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x74, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openchat_admin_admin_proto_rawDescOnce sync.Once
	file_openchat_admin_admin_proto_rawDescData = file_openchat_admin_admin_proto_rawDesc
)

func file_openchat_admin_admin_proto_rawDescGZIP() []byte {
	file_openchat_admin_admin_proto_rawDescOnce.Do(func() {
		file_openchat_admin_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_openchat_admin_admin_proto_rawDescData)
	})
	return file_openchat_admin_admin_proto_rawDescData
}

var file_openchat_admin_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 112)
var file_openchat_admin_admin_proto_goTypes = []interface{}{
	(*LoginReq)(nil),                // 0: openim.openchat.admin.LoginReq
	(*LoginResp)(nil),               // 1: openim.openchat.admin.LoginResp
	(*LogoutReq)(nil),               // 2: openim.openchat.admin.LogoutReq
	(*LogoutResp)(nil),              // 3: openim.openchat.admin.LogoutResp
	(*AddAdminAccountReq)(nil),      // 4: openim.openchat.admin.AddAdminAccountReq
	(*AddAdminAccountResp)(nil),     // 5: openim.openchat.admin.AddAdminAccountResp
	(*AdminUpdateInfoReq)(nil),      // 6: openim.openchat.admin.AdminUpdateInfoReq
	(*AdminUpdateInfoResp)(nil),     // 7: openim.openchat.admin.AdminUpdateInfoResp
	(*ChangePasswordReq)(nil),       // 8: openim.openchat.admin.ChangePasswordReq
	(*ChangePasswordResp)(nil),      // 9: openim.openchat.admin.ChangePasswordResp
	(*GetAdminInfoReq)(nil),         // 10: openim.openchat.admin.GetAdminInfoReq
	(*ChangeAdminPasswordReq)(nil),  // 11: openim.openchat.admin.ChangeAdminPasswordReq
	(*ChangeAdminPasswordResp)(nil), // 12: openim.openchat.admin.ChangeAdminPasswordResp
	(*SearchAdminAccountReq)(nil),   // 13: openim.openchat.admin.SearchAdminAccountReq
	(*SearchAdminAccountResp)(nil),  // 14: openim.openchat.admin.SearchAdminAccountResp
	(*GetAdminInfoResp)(nil),        // 15: openim.openchat.admin.GetAdminInfoResp
	(*DisableAdminAccountReq)(nil),  // 16: openim.openchat.admin.DisableAdminAccountReq
	(*DisableAdminAccountResp)(nil), // 17: openim.openchat.admin.DisableAdminAccountResp
	(*CreateTokenReq)(nil),          // 18: openim.openchat.admin.CreateTokenReq
	(*CreateTokenResp)(nil),         // 19: openim.openchat.admin.CreateTokenResp
	(*ParseTokenReq)(nil),           // 20: openim.openchat.admin.ParseTokenReq
	(*ParseTokenResp)(nil),          // 21: openim.openchat.admin.ParseTokenResp
	(*InvalidateTokenReq)(nil),      // 22: openim.openchat.admin.InvalidateTokenReq
	(*InvalidateTokenResp)(nil),     // 23: openim.openchat.admin.InvalidateTokenResp
	(*GetUserTokenReq)(nil),         // 24: openim.openchat.admin.GetUserTokenReq
	(*GetUserTokenResp)(nil),        // 25: openim.openchat.admin.GetUserTokenResp
	(*UpdateMenuReq)(nil),           // 26: openim.openchat.admin.UpdateMenuReq
	(*MenuInfoReq)(nil),             // 27: openim.openchat.admin.MenuInfoReq
	(*AddMenuReq)(nil),              // 28: openim.openchat.admin.AddMenuReq
	(*DelMenuReq)(nil),              // 29: openim.openchat.admin.DelMenuReq
	(*UpdateMenuResp)(nil),          // 30: openim.openchat.admin.UpdateMenuResp
	(*SearchMenuReq)(nil),           // 31: openim.openchat.admin.SearchMenuReq
	(*DisableMenuReq)(nil),          // 32: openim.openchat.admin.DisableMenuReq
	(*SearchMenuTreeReq)(nil),       // 33: openim.openchat.admin.SearchMenuTreeReq
	(*SearchMenuTreeResp)(nil),      // 34: openim.openchat.admin.SearchMenuTreeResp
	(*MenuInfoResp)(nil),            // 35: openim.openchat.admin.MenuInfoResp
	(*AddMenuResp)(nil),             // 36: openim.openchat.admin.AddMenuResp
	(*DelMenuResp)(nil),             // 37: openim.openchat.admin.DelMenuResp
	(*SearchMenuResp)(nil),          // 38: openim.openchat.admin.SearchMenuResp
	(*DisableMenuResp)(nil),         // 39: openim.openchat.admin.DisableMenuResp
	(*UpdateRoleReq)(nil),           // 40: openim.openchat.admin.UpdateRoleReq
	(*UpdateRoleResp)(nil),          // 41: openim.openchat.admin.UpdateRoleResp
	(*RoleInfoReq)(nil),             // 42: openim.openchat.admin.RoleInfoReq
	(*RoleInfoResp)(nil),            // 43: openim.openchat.admin.RoleInfoResp
	(*AddRoleReq)(nil),              // 44: openim.openchat.admin.AddRoleReq
	(*AddRoleResp)(nil),             // 45: openim.openchat.admin.AddRoleResp
	(*SearchAllRoleReq)(nil),        // 46: openim.openchat.admin.SearchAllRoleReq
	(*SearchAllRoleResp)(nil),       // 47: openim.openchat.admin.SearchAllRoleResp
	(*DelRoleReq)(nil),              // 48: openim.openchat.admin.DelRoleReq
	(*DelRoleResp)(nil),             // 49: openim.openchat.admin.DelRoleResp
	(*SearchRoleReq)(nil),           // 50: openim.openchat.admin.SearchRoleReq
	(*SearchRoleResp)(nil),          // 51: openim.openchat.admin.SearchRoleResp
	(*DisableRoleReq)(nil),          // 52: openim.openchat.admin.DisableRoleReq
	(*DisableRoleResp)(nil),         // 53: openim.openchat.admin.DisableRoleResp
	(*UpdateRoleMenuReq)(nil),       // 54: openim.openchat.admin.UpdateRoleMenuReq
	(*UpdateRoleMenuResp)(nil),      // 55: openim.openchat.admin.UpdateRoleMenuResp
	(*RoleMenuInfoReq)(nil),         // 56: openim.openchat.admin.RoleMenuInfoReq
	(*RoleMenuInfoResp)(nil),        // 57: openim.openchat.admin.RoleMenuInfoResp
	(*AddRoleMenuReq)(nil),          // 58: openim.openchat.admin.AddRoleMenuReq
	(*AddRoleMenuResp)(nil),         // 59: openim.openchat.admin.AddRoleMenuResp
	(*DelRoleMenuReq)(nil),          // 60: openim.openchat.admin.DelRoleMenuReq
	(*DelRoleMenuResp)(nil),         // 61: openim.openchat.admin.DelRoleMenuResp
	(*SearchAllMenuReq)(nil),        // 62: openim.openchat.admin.SearchAllMenuReq
	(*SearchAllMenuResp)(nil),       // 63: openim.openchat.admin.SearchAllMenuResp
	(*UpdateDictReq)(nil),           // 64: openim.openchat.admin.UpdateDictReq
	(*UpdateDictResp)(nil),          // 65: openim.openchat.admin.UpdateDictResp
	(*DictInfoReq)(nil),             // 66: openim.openchat.admin.DictInfoReq
	(*DictInfoResp)(nil),            // 67: openim.openchat.admin.DictInfoResp
	(*AddDictReq)(nil),              // 68: openim.openchat.admin.AddDictReq
	(*AddDictResp)(nil),             // 69: openim.openchat.admin.AddDictResp
	(*DelDictReq)(nil),              // 70: openim.openchat.admin.DelDictReq
	(*DelDictResp)(nil),             // 71: openim.openchat.admin.DelDictResp
	(*SearchDictReq)(nil),           // 72: openim.openchat.admin.SearchDictReq
	(*SearchDictResp)(nil),          // 73: openim.openchat.admin.SearchDictResp
	(*DisableDictReq)(nil),          // 74: openim.openchat.admin.DisableDictReq
	(*DisableDictResp)(nil),         // 75: openim.openchat.admin.DisableDictResp
	(*UpdateDictDetailReq)(nil),     // 76: openim.openchat.admin.UpdateDictDetailReq
	(*UpdateDictDetailResp)(nil),    // 77: openim.openchat.admin.UpdateDictDetailResp
	(*DictDetailInfoReq)(nil),       // 78: openim.openchat.admin.DictDetailInfoReq
	(*DictDetailInfoResp)(nil),      // 79: openim.openchat.admin.DictDetailInfoResp
	(*AddDictDetailReq)(nil),        // 80: openim.openchat.admin.AddDictDetailReq
	(*AddDictDetailResp)(nil),       // 81: openim.openchat.admin.AddDictDetailResp
	(*DelDictDetailReq)(nil),        // 82: openim.openchat.admin.DelDictDetailReq
	(*DelDictDetailResp)(nil),       // 83: openim.openchat.admin.DelDictDetailResp
	(*DisableDictDetailReq)(nil),    // 84: openim.openchat.admin.DisableDictDetailReq
	(*DisableDictDetailResp)(nil),   // 85: openim.openchat.admin.DisableDictDetailResp
	(*SearchByDictIdReq)(nil),       // 86: openim.openchat.admin.SearchByDictIdReq
	(*SearchByDictIdResp)(nil),      // 87: openim.openchat.admin.SearchByDictIdResp
	(*CheckAuthorizeReq)(nil),       // 88: openim.openchat.admin.CheckAuthorizeReq
	(*CheckAuthorizeResp)(nil),      // 89: openim.openchat.admin.CheckAuthorizeResp
	(*CheckIpReq)(nil),              // 90: openim.openchat.admin.CheckIpReq
	(*CheckIpResp)(nil),             // 91: openim.openchat.admin.CheckIpResp
	(*UpdateIpReq)(nil),             // 92: openim.openchat.admin.UpdateIpReq
	(*UpdateIpResp)(nil),            // 93: openim.openchat.admin.UpdateIpResp
	(*IpInfoReq)(nil),               // 94: openim.openchat.admin.IpInfoReq
	(*IpInfoResp)(nil),              // 95: openim.openchat.admin.IpInfoResp
	(*AddIpReq)(nil),                // 96: openim.openchat.admin.AddIpReq
	(*AddIpResp)(nil),               // 97: openim.openchat.admin.AddIpResp
	(*DelIpReq)(nil),                // 98: openim.openchat.admin.DelIpReq
	(*DelIpResp)(nil),               // 99: openim.openchat.admin.DelIpResp
	(*SearchIpReq)(nil),             // 100: openim.openchat.admin.SearchIpReq
	(*SearchIpResp)(nil),            // 101: openim.openchat.admin.SearchIpResp
	(*LogInfoReq)(nil),              // 102: openim.openchat.admin.LogInfoReq
	(*LogInfoResp)(nil),             // 103: openim.openchat.admin.LogInfoResp
	(*AddLogReq)(nil),               // 104: openim.openchat.admin.AddLogReq
	(*AddLogResp)(nil),              // 105: openim.openchat.admin.AddLogResp
	(*DelLogReq)(nil),               // 106: openim.openchat.admin.DelLogReq
	(*DelLogResp)(nil),              // 107: openim.openchat.admin.DelLogResp
	(*SearchLogReq)(nil),            // 108: openim.openchat.admin.SearchLogReq
	(*SearchLogResp)(nil),           // 109: openim.openchat.admin.SearchLogResp
	nil,                             // 110: openim.openchat.admin.GetUserTokenResp.TokensMapEntry
	nil,                             // 111: openim.openchat.admin.SearchMenuTreeResp.MenuTreeMapEntry
	(*wrapperspb.StringValue)(nil),  // 112: openim.protobuf.StringValue
	(*wrapperspb.UInt32Value)(nil),  // 113: openim.protobuf.UInt32Value
	(*wrapperspb.UInt64Value)(nil),  // 114: openim.protobuf.UInt64Value
	(*sdkws.RequestPagination)(nil), // 115: openim.sdkws.RequestPagination
}
var file_openchat_admin_admin_proto_depIdxs = []int32{
	112, // 0: openim.openchat.admin.AdminUpdateInfoReq.account:type_name -> openim.protobuf.StringValue
	112, // 1: openim.openchat.admin.AdminUpdateInfoReq.password:type_name -> openim.protobuf.StringValue
	112, // 2: openim.openchat.admin.AdminUpdateInfoReq.nickname:type_name -> openim.protobuf.StringValue
	113, // 3: openim.openchat.admin.AdminUpdateInfoReq.status:type_name -> openim.protobuf.UInt32Value
	114, // 4: openim.openchat.admin.AdminUpdateInfoReq.roleId:type_name -> openim.protobuf.UInt64Value
	112, // 5: openim.openchat.admin.AdminUpdateInfoReq.desc:type_name -> openim.protobuf.StringValue
	115, // 6: openim.openchat.admin.SearchAdminAccountReq.pagination:type_name -> openim.sdkws.RequestPagination
	15,  // 7: openim.openchat.admin.SearchAdminAccountResp.adminAccounts:type_name -> openim.openchat.admin.GetAdminInfoResp
	110, // 8: openim.openchat.admin.GetUserTokenResp.tokensMap:type_name -> openim.openchat.admin.GetUserTokenResp.TokensMapEntry
	115, // 9: openim.openchat.admin.SearchMenuReq.pagination:type_name -> openim.sdkws.RequestPagination
	111, // 10: openim.openchat.admin.SearchMenuTreeResp.menuTreeMap:type_name -> openim.openchat.admin.SearchMenuTreeResp.MenuTreeMapEntry
	35,  // 11: openim.openchat.admin.SearchMenuResp.menuInfo:type_name -> openim.openchat.admin.MenuInfoResp
	43,  // 12: openim.openchat.admin.SearchAllRoleResp.roles:type_name -> openim.openchat.admin.RoleInfoResp
	115, // 13: openim.openchat.admin.SearchRoleReq.pagination:type_name -> openim.sdkws.RequestPagination
	43,  // 14: openim.openchat.admin.SearchRoleResp.roleInfo:type_name -> openim.openchat.admin.RoleInfoResp
	35,  // 15: openim.openchat.admin.SearchAllMenuResp.menuInfo:type_name -> openim.openchat.admin.MenuInfoResp
	115, // 16: openim.openchat.admin.SearchDictReq.pagination:type_name -> openim.sdkws.RequestPagination
	67,  // 17: openim.openchat.admin.SearchDictResp.dictInfo:type_name -> openim.openchat.admin.DictInfoResp
	79,  // 18: openim.openchat.admin.SearchByDictIdResp.dictDetailInfos:type_name -> openim.openchat.admin.DictDetailInfoResp
	115, // 19: openim.openchat.admin.SearchIpReq.pagination:type_name -> openim.sdkws.RequestPagination
	95,  // 20: openim.openchat.admin.SearchIpResp.ipInfoList:type_name -> openim.openchat.admin.IpInfoResp
	115, // 21: openim.openchat.admin.SearchLogReq.pagination:type_name -> openim.sdkws.RequestPagination
	103, // 22: openim.openchat.admin.SearchLogResp.logInfoList:type_name -> openim.openchat.admin.LogInfoResp
	0,   // 23: openim.openchat.admin.admin.Login:input_type -> openim.openchat.admin.LoginReq
	2,   // 24: openim.openchat.admin.admin.Logout:input_type -> openim.openchat.admin.LogoutReq
	8,   // 25: openim.openchat.admin.admin.ChangePassword:input_type -> openim.openchat.admin.ChangePasswordReq
	6,   // 26: openim.openchat.admin.admin.AdminUpdateInfo:input_type -> openim.openchat.admin.AdminUpdateInfoReq
	10,  // 27: openim.openchat.admin.admin.GetAdminInfo:input_type -> openim.openchat.admin.GetAdminInfoReq
	4,   // 28: openim.openchat.admin.admin.AddAdminAccount:input_type -> openim.openchat.admin.AddAdminAccountReq
	11,  // 29: openim.openchat.admin.admin.ChangeAdminPassword:input_type -> openim.openchat.admin.ChangeAdminPasswordReq
	13,  // 30: openim.openchat.admin.admin.SearchAdminAccount:input_type -> openim.openchat.admin.SearchAdminAccountReq
	16,  // 31: openim.openchat.admin.admin.DisableAdminAccount:input_type -> openim.openchat.admin.DisableAdminAccountReq
	18,  // 32: openim.openchat.admin.admin.CreateToken:input_type -> openim.openchat.admin.CreateTokenReq
	20,  // 33: openim.openchat.admin.admin.ParseToken:input_type -> openim.openchat.admin.ParseTokenReq
	24,  // 34: openim.openchat.admin.admin.GetUserToken:input_type -> openim.openchat.admin.GetUserTokenReq
	22,  // 35: openim.openchat.admin.admin.InvalidateToken:input_type -> openim.openchat.admin.InvalidateTokenReq
	26,  // 36: openim.openchat.admin.admin.UpdateMenuInfo:input_type -> openim.openchat.admin.UpdateMenuReq
	27,  // 37: openim.openchat.admin.admin.MenuInfo:input_type -> openim.openchat.admin.MenuInfoReq
	28,  // 38: openim.openchat.admin.admin.AddMenu:input_type -> openim.openchat.admin.AddMenuReq
	29,  // 39: openim.openchat.admin.admin.DelMenu:input_type -> openim.openchat.admin.DelMenuReq
	31,  // 40: openim.openchat.admin.admin.SearchMenu:input_type -> openim.openchat.admin.SearchMenuReq
	32,  // 41: openim.openchat.admin.admin.DisableMenu:input_type -> openim.openchat.admin.DisableMenuReq
	33,  // 42: openim.openchat.admin.admin.SearchMenuTree:input_type -> openim.openchat.admin.SearchMenuTreeReq
	62,  // 43: openim.openchat.admin.admin.SearchAllMenu:input_type -> openim.openchat.admin.SearchAllMenuReq
	40,  // 44: openim.openchat.admin.admin.UpdateRoleInfo:input_type -> openim.openchat.admin.UpdateRoleReq
	42,  // 45: openim.openchat.admin.admin.RoleInfo:input_type -> openim.openchat.admin.RoleInfoReq
	44,  // 46: openim.openchat.admin.admin.AddRole:input_type -> openim.openchat.admin.AddRoleReq
	48,  // 47: openim.openchat.admin.admin.DelRole:input_type -> openim.openchat.admin.DelRoleReq
	50,  // 48: openim.openchat.admin.admin.SearchRole:input_type -> openim.openchat.admin.SearchRoleReq
	46,  // 49: openim.openchat.admin.admin.SearchAllRole:input_type -> openim.openchat.admin.SearchAllRoleReq
	52,  // 50: openim.openchat.admin.admin.DisableRole:input_type -> openim.openchat.admin.DisableRoleReq
	54,  // 51: openim.openchat.admin.admin.UpdateRoleMenuInfo:input_type -> openim.openchat.admin.UpdateRoleMenuReq
	56,  // 52: openim.openchat.admin.admin.RoleMenuInfo:input_type -> openim.openchat.admin.RoleMenuInfoReq
	58,  // 53: openim.openchat.admin.admin.AddRoleMenu:input_type -> openim.openchat.admin.AddRoleMenuReq
	60,  // 54: openim.openchat.admin.admin.DelRoleMenu:input_type -> openim.openchat.admin.DelRoleMenuReq
	64,  // 55: openim.openchat.admin.admin.UpdateDictInfo:input_type -> openim.openchat.admin.UpdateDictReq
	66,  // 56: openim.openchat.admin.admin.DictInfo:input_type -> openim.openchat.admin.DictInfoReq
	68,  // 57: openim.openchat.admin.admin.AddDict:input_type -> openim.openchat.admin.AddDictReq
	70,  // 58: openim.openchat.admin.admin.DelDict:input_type -> openim.openchat.admin.DelDictReq
	72,  // 59: openim.openchat.admin.admin.SearchDict:input_type -> openim.openchat.admin.SearchDictReq
	74,  // 60: openim.openchat.admin.admin.DisableDict:input_type -> openim.openchat.admin.DisableDictReq
	76,  // 61: openim.openchat.admin.admin.UpdateDictDetailInfo:input_type -> openim.openchat.admin.UpdateDictDetailReq
	78,  // 62: openim.openchat.admin.admin.DictDetailInfo:input_type -> openim.openchat.admin.DictDetailInfoReq
	80,  // 63: openim.openchat.admin.admin.AddDictDetail:input_type -> openim.openchat.admin.AddDictDetailReq
	82,  // 64: openim.openchat.admin.admin.DelDictDetail:input_type -> openim.openchat.admin.DelDictDetailReq
	86,  // 65: openim.openchat.admin.admin.SearchByDictId:input_type -> openim.openchat.admin.SearchByDictIdReq
	84,  // 66: openim.openchat.admin.admin.DisableDictDetail:input_type -> openim.openchat.admin.DisableDictDetailReq
	88,  // 67: openim.openchat.admin.admin.CheckAuthorize:input_type -> openim.openchat.admin.CheckAuthorizeReq
	90,  // 68: openim.openchat.admin.admin.CheckIp:input_type -> openim.openchat.admin.CheckIpReq
	92,  // 69: openim.openchat.admin.admin.UpdateIpInfo:input_type -> openim.openchat.admin.UpdateIpReq
	94,  // 70: openim.openchat.admin.admin.IpInfo:input_type -> openim.openchat.admin.IpInfoReq
	96,  // 71: openim.openchat.admin.admin.AddIp:input_type -> openim.openchat.admin.AddIpReq
	98,  // 72: openim.openchat.admin.admin.DelIp:input_type -> openim.openchat.admin.DelIpReq
	100, // 73: openim.openchat.admin.admin.SearchIp:input_type -> openim.openchat.admin.SearchIpReq
	102, // 74: openim.openchat.admin.admin.LogInfo:input_type -> openim.openchat.admin.LogInfoReq
	104, // 75: openim.openchat.admin.admin.AddLog:input_type -> openim.openchat.admin.AddLogReq
	106, // 76: openim.openchat.admin.admin.DelLog:input_type -> openim.openchat.admin.DelLogReq
	108, // 77: openim.openchat.admin.admin.SearchLog:input_type -> openim.openchat.admin.SearchLogReq
	1,   // 78: openim.openchat.admin.admin.Login:output_type -> openim.openchat.admin.LoginResp
	3,   // 79: openim.openchat.admin.admin.Logout:output_type -> openim.openchat.admin.LogoutResp
	9,   // 80: openim.openchat.admin.admin.ChangePassword:output_type -> openim.openchat.admin.ChangePasswordResp
	7,   // 81: openim.openchat.admin.admin.AdminUpdateInfo:output_type -> openim.openchat.admin.AdminUpdateInfoResp
	15,  // 82: openim.openchat.admin.admin.GetAdminInfo:output_type -> openim.openchat.admin.GetAdminInfoResp
	5,   // 83: openim.openchat.admin.admin.AddAdminAccount:output_type -> openim.openchat.admin.AddAdminAccountResp
	12,  // 84: openim.openchat.admin.admin.ChangeAdminPassword:output_type -> openim.openchat.admin.ChangeAdminPasswordResp
	14,  // 85: openim.openchat.admin.admin.SearchAdminAccount:output_type -> openim.openchat.admin.SearchAdminAccountResp
	17,  // 86: openim.openchat.admin.admin.DisableAdminAccount:output_type -> openim.openchat.admin.DisableAdminAccountResp
	19,  // 87: openim.openchat.admin.admin.CreateToken:output_type -> openim.openchat.admin.CreateTokenResp
	21,  // 88: openim.openchat.admin.admin.ParseToken:output_type -> openim.openchat.admin.ParseTokenResp
	25,  // 89: openim.openchat.admin.admin.GetUserToken:output_type -> openim.openchat.admin.GetUserTokenResp
	23,  // 90: openim.openchat.admin.admin.InvalidateToken:output_type -> openim.openchat.admin.InvalidateTokenResp
	30,  // 91: openim.openchat.admin.admin.UpdateMenuInfo:output_type -> openim.openchat.admin.UpdateMenuResp
	35,  // 92: openim.openchat.admin.admin.MenuInfo:output_type -> openim.openchat.admin.MenuInfoResp
	36,  // 93: openim.openchat.admin.admin.AddMenu:output_type -> openim.openchat.admin.AddMenuResp
	37,  // 94: openim.openchat.admin.admin.DelMenu:output_type -> openim.openchat.admin.DelMenuResp
	38,  // 95: openim.openchat.admin.admin.SearchMenu:output_type -> openim.openchat.admin.SearchMenuResp
	39,  // 96: openim.openchat.admin.admin.DisableMenu:output_type -> openim.openchat.admin.DisableMenuResp
	34,  // 97: openim.openchat.admin.admin.SearchMenuTree:output_type -> openim.openchat.admin.SearchMenuTreeResp
	63,  // 98: openim.openchat.admin.admin.SearchAllMenu:output_type -> openim.openchat.admin.SearchAllMenuResp
	41,  // 99: openim.openchat.admin.admin.UpdateRoleInfo:output_type -> openim.openchat.admin.UpdateRoleResp
	43,  // 100: openim.openchat.admin.admin.RoleInfo:output_type -> openim.openchat.admin.RoleInfoResp
	45,  // 101: openim.openchat.admin.admin.AddRole:output_type -> openim.openchat.admin.AddRoleResp
	49,  // 102: openim.openchat.admin.admin.DelRole:output_type -> openim.openchat.admin.DelRoleResp
	51,  // 103: openim.openchat.admin.admin.SearchRole:output_type -> openim.openchat.admin.SearchRoleResp
	47,  // 104: openim.openchat.admin.admin.SearchAllRole:output_type -> openim.openchat.admin.SearchAllRoleResp
	53,  // 105: openim.openchat.admin.admin.DisableRole:output_type -> openim.openchat.admin.DisableRoleResp
	55,  // 106: openim.openchat.admin.admin.UpdateRoleMenuInfo:output_type -> openim.openchat.admin.UpdateRoleMenuResp
	57,  // 107: openim.openchat.admin.admin.RoleMenuInfo:output_type -> openim.openchat.admin.RoleMenuInfoResp
	59,  // 108: openim.openchat.admin.admin.AddRoleMenu:output_type -> openim.openchat.admin.AddRoleMenuResp
	61,  // 109: openim.openchat.admin.admin.DelRoleMenu:output_type -> openim.openchat.admin.DelRoleMenuResp
	65,  // 110: openim.openchat.admin.admin.UpdateDictInfo:output_type -> openim.openchat.admin.UpdateDictResp
	67,  // 111: openim.openchat.admin.admin.DictInfo:output_type -> openim.openchat.admin.DictInfoResp
	69,  // 112: openim.openchat.admin.admin.AddDict:output_type -> openim.openchat.admin.AddDictResp
	71,  // 113: openim.openchat.admin.admin.DelDict:output_type -> openim.openchat.admin.DelDictResp
	73,  // 114: openim.openchat.admin.admin.SearchDict:output_type -> openim.openchat.admin.SearchDictResp
	75,  // 115: openim.openchat.admin.admin.DisableDict:output_type -> openim.openchat.admin.DisableDictResp
	77,  // 116: openim.openchat.admin.admin.UpdateDictDetailInfo:output_type -> openim.openchat.admin.UpdateDictDetailResp
	79,  // 117: openim.openchat.admin.admin.DictDetailInfo:output_type -> openim.openchat.admin.DictDetailInfoResp
	81,  // 118: openim.openchat.admin.admin.AddDictDetail:output_type -> openim.openchat.admin.AddDictDetailResp
	83,  // 119: openim.openchat.admin.admin.DelDictDetail:output_type -> openim.openchat.admin.DelDictDetailResp
	87,  // 120: openim.openchat.admin.admin.SearchByDictId:output_type -> openim.openchat.admin.SearchByDictIdResp
	85,  // 121: openim.openchat.admin.admin.DisableDictDetail:output_type -> openim.openchat.admin.DisableDictDetailResp
	89,  // 122: openim.openchat.admin.admin.CheckAuthorize:output_type -> openim.openchat.admin.CheckAuthorizeResp
	91,  // 123: openim.openchat.admin.admin.CheckIp:output_type -> openim.openchat.admin.CheckIpResp
	93,  // 124: openim.openchat.admin.admin.UpdateIpInfo:output_type -> openim.openchat.admin.UpdateIpResp
	95,  // 125: openim.openchat.admin.admin.IpInfo:output_type -> openim.openchat.admin.IpInfoResp
	97,  // 126: openim.openchat.admin.admin.AddIp:output_type -> openim.openchat.admin.AddIpResp
	99,  // 127: openim.openchat.admin.admin.DelIp:output_type -> openim.openchat.admin.DelIpResp
	101, // 128: openim.openchat.admin.admin.SearchIp:output_type -> openim.openchat.admin.SearchIpResp
	103, // 129: openim.openchat.admin.admin.LogInfo:output_type -> openim.openchat.admin.LogInfoResp
	105, // 130: openim.openchat.admin.admin.AddLog:output_type -> openim.openchat.admin.AddLogResp
	107, // 131: openim.openchat.admin.admin.DelLog:output_type -> openim.openchat.admin.DelLogResp
	109, // 132: openim.openchat.admin.admin.SearchLog:output_type -> openim.openchat.admin.SearchLogResp
	78,  // [78:133] is the sub-list for method output_type
	23,  // [23:78] is the sub-list for method input_type
	23,  // [23:23] is the sub-list for extension type_name
	23,  // [23:23] is the sub-list for extension extendee
	0,   // [0:23] is the sub-list for field type_name
}

func init() { file_openchat_admin_admin_proto_init() }
func file_openchat_admin_admin_proto_init() {
	if File_openchat_admin_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_openchat_admin_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAdminAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAdminAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAdminAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAdminAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuTreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetailInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetailInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableDictDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableDictDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByDictIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByDictIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuthorizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuthorizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openchat_admin_admin_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openchat_admin_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   112,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openchat_admin_admin_proto_goTypes,
		DependencyIndexes: file_openchat_admin_admin_proto_depIdxs,
		MessageInfos:      file_openchat_admin_admin_proto_msgTypes,
	}.Build()
	File_openchat_admin_admin_proto = out.File
	file_openchat_admin_admin_proto_rawDesc = nil
	file_openchat_admin_admin_proto_goTypes = nil
	file_openchat_admin_admin_proto_depIdxs = nil
}
